{
	"name": "login-page",
	"type": "components:ui",
	"category": "auth",
	"description": "Login page component",
	"dependencies": {
		"shadcn": ["form", "input", "button", "card"],
		"npm": []
	},
	"registryDependencies": [],
	"files": [
		{
			"path": "components/admin/login-page.tsx",
			"content": "import { useState } from \"react\";\nimport { Form, required, useLogin, useNotify } from \"ra-core\";\nimport type { SubmitHandler, FieldValues } from \"react-hook-form\";\nimport { Button } from \"@/components/ui/button\";\nimport { TextInput } from \"@/components/admin/text-input\";\nimport { Notification } from \"@/components/admin/notification\";\n\nexport const LoginPage = (props: { redirectTo?: string }) => {\n  const { redirectTo } = props;\n  const [loading, setLoading] = useState(false);\n  const login = useLogin();\n  const notify = useNotify();\n\n  const handleSubmit: SubmitHandler<FieldValues> = (values) => {\n    setLoading(true);\n    login(values, redirectTo)\n      .then(() => {\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        notify(\n          typeof error === \"string\"\n            ? error\n            : typeof error === \"undefined\" || !error.message\n            ? \"ra.auth.sign_in_error\"\n            : error.message,\n          {\n            type: \"error\",\n            messageArgs: {\n              _:\n                typeof error === \"string\"\n                  ? error\n                  : error && error.message\n                  ? error.message\n                  : undefined,\n            },\n          }\n        );\n      });\n  };\n\n  return (\n    <div className=\"min-h-screen flex\">\n      <div className=\"container relative grid flex-col items-center justify-center sm:max-w-none lg:grid-cols-2 lg:px-0\">\n        <div className=\"relative hidden h-full flex-col bg-muted p-10 text-white dark:border-r lg:flex\">\n          <div className=\"absolute inset-0 bg-zinc-900\" />\n          <div className=\"relative z-20 flex items-center text-lg font-medium\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"mr-2 h-6 w-6\"\n            >\n              <path d=\"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3\" />\n            </svg>\n            Acme Inc\n          </div>\n          <div className=\"relative z-20 mt-auto\">\n            <blockquote className=\"space-y-2\">\n              <p className=\"text-lg\">\n                &ldquo;Shadcn Admin Kit has allowed us to quickly create and\n                evolve a powerful tool that otherwise would have taken months of\n                time and effort to develop.&rdquo;\n              </p>\n              <footer className=\"text-sm\">John Doe</footer>\n            </blockquote>\n          </div>\n        </div>\n        <div className=\"lg:p-8\">\n          <div className=\"mx-auto flex w-full flex-col justify-center space-y-6 sm:w-[350px]\">\n            <div className=\"flex flex-col space-y-2 text-center\">\n              <h1 className=\"text-2xl font-semibold tracking-tight\">Sign in</h1>\n              <p className=\"text-sm leading-none text-muted-foreground\">\n                Try janedoe@acme.com / password\n              </p>\n            </div>\n            <Form className=\"space-y-8\" onSubmit={handleSubmit}>\n              <TextInput\n                label=\"Email\"\n                source=\"email\"\n                type=\"email\"\n                validate={required()}\n              />\n              <TextInput\n                label=\"Password\"\n                source=\"password\"\n                type=\"password\"\n                validate={required()}\n              />\n              <Button\n                type=\"submit\"\n                className=\"cursor-pointer\"\n                disabled={loading}\n              >\n                Sign in\n              </Button>\n            </Form>\n          </div>\n        </div>\n      </div>\n      <Notification />\n    </div>\n  );\n};\n",
			"type": "components:ui"
		}
	],
	"tailwind": {
		"config": {}
	}
}
